import { clearScheduledInterval, clearScheduledTimeout, scheduleInterval, scheduleTimeout } from './helpers/timer';
addEventListener('message', function (_a) {
    var data = _a.data;
    try {
        if (data.method === 'clear') {
            var id = data.id, _b = data.params, timerId = _b.timerId, timerType = _b.timerType;
            if (timerType === 'interval') {
                clearScheduledInterval(timerId);
                postMessage({ error: null, id: id });
            }
            else if (timerType === 'timeout') {
                clearScheduledTimeout(timerId);
                postMessage({ error: null, id: id });
            }
            else {
                throw new Error("The given type \"" + timerType + "\" is not supported");
            }
        }
        else if (data.method === 'set') {
            var _c = data.params, delay = _c.delay, now = _c.now, timerId = _c.timerId, timerType = _c.timerType;
            if (timerType === 'interval') {
                scheduleInterval(delay, timerId, now);
            }
            else if (timerType === 'timeout') {
                scheduleTimeout(delay, timerId, now);
            }
            else {
                throw new Error("The given type \"" + timerType + "\" is not supported");
            }
        }
        else {
            throw new Error("The given method \"" + data.method + "\" is not supported");
        }
    }
    catch (err) {
        postMessage({
            error: {
                message: err.message
            },
            id: data.id,
            result: null
        });
    }
});
//# sourceMappingURL=/users/chrisguttandin/repositories/worker-timers-worker/node_modules/tsconfig-holy-grail/src/module.js.map