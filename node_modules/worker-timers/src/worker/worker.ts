// tslint:disable-next-line:max-line-length
export const worker = `!function(){"use strict";var e=new Map,t=new Map,r=function(t){var r=e.get(t);if(void 0===r)throw new Error('There is no interval scheduled with the given id "'+t+'".');clearTimeout(r),e.delete(t)},i=function(e){var r=t.get(e);if(void 0===r)throw new Error('There is no timeout scheduled with the given id "'+e+'".');clearTimeout(r),t.delete(e)},o=function(e,t){var r=void 0;if("performance"in self){var i=performance.now();e-=Math.max(0,i-t),r=i}else r=Date.now();return{delay:e,expected:r+e}},n=function e(t,r,i,o){var n="performance"in self?performance.now():Date.now();n>i?postMessage({id:null,method:"call",params:{timerId:r,timerType:o}}):t.set(r,setTimeout(e,i-n,t,r,i,o))},a=function(t,r,i){var a=void 0,s=o(t,i);t=s.delay,a=s.expected,e.set(r,setTimeout(n,t,e,r,a,"interval"))},s=function(e,r,i){var a=void 0,s=o(e,i);e=s.delay,a=s.expected,t.set(r,setTimeout(n,e,t,r,a,"timeout"))};addEventListener("message",function(e){var t=e.data;try{if("clear"===t.method){var o=t.id,n=t.params,d=n.timerId,l=n.timerType;if("interval"===l)r(d),postMessage({error:null,id:o});else{if("timeout"!==l)throw new Error('The given type "'+l+'" is not supported');i(d),postMessage({error:null,id:o})}}else{if("set"!==t.method)throw new Error('The given method "'+t.method+'" is not supported');var m=t.params,u=m.delay,p=m.now,v=m.timerId,c=m.timerType;if("interval"===c)a(u,v,p);else{if("timeout"!==c)throw new Error('The given type "'+c+'" is not supported');s(u,v,p)}}}catch(e){postMessage({error:{message:e.message},id:t.id,result:null})}})}();`;
